0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 06 12:27:35 2024
0000              5   ;--------------------------------------------------------
                  5   $name sourcecode
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _TIMER0_Init
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _waitms
0000             34            public _Timer3us
0000             35            public _InitADC
0000             36            public __c51_external_startup
0000             37            public _v2
0000             38            public _v1
0000             39            public _v2_max
0000             40            public _v1_max
0000             41            public _Period
0000             42            public _F
0000             43            public _overflow_count
0000             44   ;--------------------------------------------------------
0000             45   ; Special Function Registers
0000             46   ;--------------------------------------------------------
0000             47   _ACC            DATA 0xe0
0000             48   _ADC0ASAH       DATA 0xb6
0000             49   _ADC0ASAL       DATA 0xb5
0000             50   _ADC0ASCF       DATA 0xa1
0000             51   _ADC0ASCT       DATA 0xc7
0000             52   _ADC0CF0        DATA 0xbc
0000             53   _ADC0CF1        DATA 0xb9
0000             54   _ADC0CF2        DATA 0xdf
0000             55   _ADC0CN0        DATA 0xe8
0000             56   _ADC0CN1        DATA 0xb2
0000             57   _ADC0CN2        DATA 0xb3
0000             58   _ADC0GTH        DATA 0xc4
0000             59   _ADC0GTL        DATA 0xc3
0000             60   _ADC0H          DATA 0xbe
0000             61   _ADC0L          DATA 0xbd
0000             62   _ADC0LTH        DATA 0xc6
0000             63   _ADC0LTL        DATA 0xc5
0000             64   _ADC0MX         DATA 0xbb
0000             65   _B              DATA 0xf0
0000             66   _CKCON0         DATA 0x8e
0000             67   _CKCON1         DATA 0xa6
0000             68   _CLEN0          DATA 0xc6
0000             69   _CLIE0          DATA 0xc7
0000             70   _CLIF0          DATA 0xe8
0000             71   _CLKSEL         DATA 0xa9
0000             72   _CLOUT0         DATA 0xd1
0000             73   _CLU0CF         DATA 0xb1
0000             74   _CLU0FN         DATA 0xaf
0000             75   _CLU0MX         DATA 0x84
0000             76   _CLU1CF         DATA 0xb3
0000             77   _CLU1FN         DATA 0xb2
0000             78   _CLU1MX         DATA 0x85
0000             79   _CLU2CF         DATA 0xb6
0000             80   _CLU2FN         DATA 0xb5
0000             81   _CLU2MX         DATA 0x91
0000             82   _CLU3CF         DATA 0xbf
0000             83   _CLU3FN         DATA 0xbe
0000             84   _CLU3MX         DATA 0xae
0000             85   _CMP0CN0        DATA 0x9b
0000             86   _CMP0CN1        DATA 0x99
0000             87   _CMP0MD         DATA 0x9d
0000             88   _CMP0MX         DATA 0x9f
0000             89   _CMP1CN0        DATA 0xbf
0000             90   _CMP1CN1        DATA 0xac
0000             91   _CMP1MD         DATA 0xab
0000             92   _CMP1MX         DATA 0xaa
0000             93   _CRC0CN0        DATA 0xce
0000             94   _CRC0CN1        DATA 0x86
0000             95   _CRC0CNT        DATA 0xd3
0000             96   _CRC0DAT        DATA 0xcb
0000             97   _CRC0FLIP       DATA 0xcf
0000             98   _CRC0IN         DATA 0xca
0000             99   _CRC0ST         DATA 0xd2
0000            100   _DAC0CF0        DATA 0x91
0000            101   _DAC0CF1        DATA 0x92
0000            102   _DAC0H          DATA 0x85
0000            103   _DAC0L          DATA 0x84
0000            104   _DAC1CF0        DATA 0x93
0000            105   _DAC1CF1        DATA 0x94
0000            106   _DAC1H          DATA 0x8a
0000            107   _DAC1L          DATA 0x89
0000            108   _DAC2CF0        DATA 0x95
0000            109   _DAC2CF1        DATA 0x96
0000            110   _DAC2H          DATA 0x8c
0000            111   _DAC2L          DATA 0x8b
0000            112   _DAC3CF0        DATA 0x9a
0000            113   _DAC3CF1        DATA 0x9c
0000            114   _DAC3H          DATA 0x8e
0000            115   _DAC3L          DATA 0x8d
0000            116   _DACGCF0        DATA 0x88
0000            117   _DACGCF1        DATA 0x98
0000            118   _DACGCF2        DATA 0xa2
0000            119   _DERIVID        DATA 0xad
0000            120   _DEVICEID       DATA 0xb5
0000            121   _DPH            DATA 0x83
0000            122   _DPL            DATA 0x82
0000            123   _EIE1           DATA 0xe6
0000            124   _EIE2           DATA 0xf3
0000            125   _EIP1           DATA 0xbb
0000            126   _EIP1H          DATA 0xee
0000            127   _EIP2           DATA 0xed
0000            128   _EIP2H          DATA 0xf6
0000            129   _EMI0CN         DATA 0xe7
0000            130   _FLKEY          DATA 0xb7
0000            131   _HFO0CAL        DATA 0xc7
0000            132   _HFO1CAL        DATA 0xd6
0000            133   _HFOCN          DATA 0xef
0000            134   _I2C0ADM        DATA 0xff
0000            135   _I2C0CN0        DATA 0xba
0000            136   _I2C0DIN        DATA 0xbc
0000            137   _I2C0DOUT       DATA 0xbb
0000            138   _I2C0FCN0       DATA 0xad
0000            139   _I2C0FCN1       DATA 0xab
0000            140   _I2C0FCT        DATA 0xf5
0000            141   _I2C0SLAD       DATA 0xbd
0000            142   _I2C0STAT       DATA 0xb9
0000            143   _IE             DATA 0xa8
0000            144   _IP             DATA 0xb8
0000            145   _IPH            DATA 0xf2
0000            146   _IT01CF         DATA 0xe4
0000            147   _LFO0CN         DATA 0xb1
0000            148   _P0             DATA 0x80
0000            149   _P0MASK         DATA 0xfe
0000            150   _P0MAT          DATA 0xfd
0000            151   _P0MDIN         DATA 0xf1
0000            152   _P0MDOUT        DATA 0xa4
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1             DATA 0x90
0000            155   _P1MASK         DATA 0xee
0000            156   _P1MAT          DATA 0xed
0000            157   _P1MDIN         DATA 0xf2
0000            158   _P1MDOUT        DATA 0xa5
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2             DATA 0xa0
0000            161   _P2MASK         DATA 0xfc
0000            162   _P2MAT          DATA 0xfb
0000            163   _P2MDIN         DATA 0xf3
0000            164   _P2MDOUT        DATA 0xa6
0000            165   _P2SKIP         DATA 0xcc
0000            166   _P3             DATA 0xb0
0000            167   _P3MDIN         DATA 0xf4
0000            168   _P3MDOUT        DATA 0x9c
0000            169   _PCA0CENT       DATA 0x9e
0000            170   _PCA0CLR        DATA 0x9c
0000            171   _PCA0CN0        DATA 0xd8
0000            172   _PCA0CPH0       DATA 0xfc
0000            173   _PCA0CPH1       DATA 0xea
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPH3       DATA 0xf5
0000            176   _PCA0CPH4       DATA 0x85
0000            177   _PCA0CPH5       DATA 0xde
0000            178   _PCA0CPL0       DATA 0xfb
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPL2       DATA 0xeb
0000            181   _PCA0CPL3       DATA 0xf4
0000            182   _PCA0CPL4       DATA 0x84
0000            183   _PCA0CPL5       DATA 0xdd
0000            184   _PCA0CPM0       DATA 0xda
0000            185   _PCA0CPM1       DATA 0xdb
0000            186   _PCA0CPM2       DATA 0xdc
0000            187   _PCA0CPM3       DATA 0xae
0000            188   _PCA0CPM4       DATA 0xaf
0000            189   _PCA0CPM5       DATA 0xcc
0000            190   _PCA0H          DATA 0xfa
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0MD         DATA 0xd9
0000            193   _PCA0POL        DATA 0x96
0000            194   _PCA0PWM        DATA 0xf7
0000            195   _PCON0          DATA 0x87
0000            196   _PCON1          DATA 0xcd
0000            197   _PFE0CN         DATA 0xc1
0000            198   _PRTDRV         DATA 0xf6
0000            199   _PSCTL          DATA 0x8f
0000            200   _PSTAT0         DATA 0xaa
0000            201   _PSW            DATA 0xd0
0000            202   _REF0CN         DATA 0xd1
0000            203   _REG0CN         DATA 0xc9
0000            204   _REVID          DATA 0xb6
0000            205   _RSTSRC         DATA 0xef
0000            206   _SBCON1         DATA 0x94
0000            207   _SBRLH1         DATA 0x96
0000            208   _SBRLL1         DATA 0x95
0000            209   _SBUF           DATA 0x99
0000            210   _SBUF0          DATA 0x99
0000            211   _SBUF1          DATA 0x92
0000            212   _SCON           DATA 0x98
0000            213   _SCON0          DATA 0x98
0000            214   _SCON1          DATA 0xc8
0000            215   _SFRPAGE        DATA 0xa7
0000            216   _SFRPGCN        DATA 0xbc
0000            217   _SFRSTACK       DATA 0xd7
0000            218   _SMB0ADM        DATA 0xd6
0000            219   _SMB0ADR        DATA 0xd7
0000            220   _SMB0CF         DATA 0xc1
0000            221   _SMB0CN0        DATA 0xc0
0000            222   _SMB0DAT        DATA 0xc2
0000            223   _SMB0FCN0       DATA 0xc3
0000            224   _SMB0FCN1       DATA 0xc4
0000            225   _SMB0FCT        DATA 0xef
0000            226   _SMB0RXLN       DATA 0xc5
0000            227   _SMB0TC         DATA 0xac
0000            228   _SMOD1          DATA 0x93
0000            229   _SP             DATA 0x81
0000            230   _SPI0CFG        DATA 0xa1
0000            231   _SPI0CKR        DATA 0xa2
0000            232   _SPI0CN0        DATA 0xf8
0000            233   _SPI0DAT        DATA 0xa3
0000            234   _SPI0FCN0       DATA 0x9a
0000            235   _SPI0FCN1       DATA 0x9b
0000            236   _SPI0FCT        DATA 0xf7
0000            237   _SPI0PCF        DATA 0xdf
0000            238   _TCON           DATA 0x88
0000            239   _TH0            DATA 0x8c
0000            240   _TH1            DATA 0x8d
0000            241   _TL0            DATA 0x8a
0000            242   _TL1            DATA 0x8b
0000            243   _TMOD           DATA 0x89
0000            244   _TMR2CN0        DATA 0xc8
0000            245   _TMR2CN1        DATA 0xfd
0000            246   _TMR2H          DATA 0xcf
0000            247   _TMR2L          DATA 0xce
0000            248   _TMR2RLH        DATA 0xcb
0000            249   _TMR2RLL        DATA 0xca
0000            250   _TMR3CN0        DATA 0x91
0000            251   _TMR3CN1        DATA 0xfe
0000            252   _TMR3H          DATA 0x95
0000            253   _TMR3L          DATA 0x94
0000            254   _TMR3RLH        DATA 0x93
0000            255   _TMR3RLL        DATA 0x92
0000            256   _TMR4CN0        DATA 0x98
0000            257   _TMR4CN1        DATA 0xff
0000            258   _TMR4H          DATA 0xa5
0000            259   _TMR4L          DATA 0xa4
0000            260   _TMR4RLH        DATA 0xa3
0000            261   _TMR4RLL        DATA 0xa2
0000            262   _TMR5CN0        DATA 0xc0
0000            263   _TMR5CN1        DATA 0xf1
0000            264   _TMR5H          DATA 0xd5
0000            265   _TMR5L          DATA 0xd4
0000            266   _TMR5RLH        DATA 0xd3
0000            267   _TMR5RLL        DATA 0xd2
0000            268   _UART0PCF       DATA 0xd9
0000            269   _UART1FCN0      DATA 0x9d
0000            270   _UART1FCN1      DATA 0xd8
0000            271   _UART1FCT       DATA 0xfa
0000            272   _UART1LIN       DATA 0x9e
0000            273   _UART1PCF       DATA 0xda
0000            274   _VDM0CN         DATA 0xff
0000            275   _WDTCN          DATA 0x97
0000            276   _XBR0           DATA 0xe1
0000            277   _XBR1           DATA 0xe2
0000            278   _XBR2           DATA 0xe3
0000            279   _XOSC0CN        DATA 0x86
0000            280   _DPTR           DATA 0x8382
0000            281   _TMR2RL         DATA 0xcbca
0000            282   _TMR3RL         DATA 0x9392
0000            283   _TMR4RL         DATA 0xa3a2
0000            284   _TMR5RL         DATA 0xd3d2
0000            285   _TMR0           DATA 0x8c8a
0000            286   _TMR1           DATA 0x8d8b
0000            287   _TMR2           DATA 0xcfce
0000            288   _TMR3           DATA 0x9594
0000            289   _TMR4           DATA 0xa5a4
0000            290   _TMR5           DATA 0xd5d4
0000            291   _SBRL1          DATA 0x9695
0000            292   _PCA0           DATA 0xfaf9
0000            293   _PCA0CP0        DATA 0xfcfb
0000            294   _PCA0CP1        DATA 0xeae9
0000            295   _PCA0CP2        DATA 0xeceb
0000            296   _PCA0CP3        DATA 0xf5f4
0000            297   _PCA0CP4        DATA 0x8584
0000            298   _PCA0CP5        DATA 0xdedd
0000            299   _ADC0ASA        DATA 0xb6b5
0000            300   _ADC0GT         DATA 0xc4c3
0000            301   _ADC0           DATA 0xbebd
0000            302   _ADC0LT         DATA 0xc6c5
0000            303   _DAC0           DATA 0x8584
0000            304   _DAC1           DATA 0x8a89
0000            305   _DAC2           DATA 0x8c8b
0000            306   _DAC3           DATA 0x8e8d
0000            307   ;--------------------------------------------------------
0000            308   ; special function bits
0000            309   ;--------------------------------------------------------
0000            310   _ACC_0          BIT 0xe0
0000            311   _ACC_1          BIT 0xe1
0000            312   _ACC_2          BIT 0xe2
0000            313   _ACC_3          BIT 0xe3
0000            314   _ACC_4          BIT 0xe4
0000            315   _ACC_5          BIT 0xe5
0000            316   _ACC_6          BIT 0xe6
0000            317   _ACC_7          BIT 0xe7
0000            318   _TEMPE          BIT 0xe8
0000            319   _ADGN0          BIT 0xe9
0000            320   _ADGN1          BIT 0xea
0000            321   _ADWINT         BIT 0xeb
0000            322   _ADBUSY         BIT 0xec
0000            323   _ADINT          BIT 0xed
0000            324   _IPOEN          BIT 0xee
0000            325   _ADEN           BIT 0xef
0000            326   _B_0            BIT 0xf0
0000            327   _B_1            BIT 0xf1
0000            328   _B_2            BIT 0xf2
0000            329   _B_3            BIT 0xf3
0000            330   _B_4            BIT 0xf4
0000            331   _B_5            BIT 0xf5
0000            332   _B_6            BIT 0xf6
0000            333   _B_7            BIT 0xf7
0000            334   _C0FIF          BIT 0xe8
0000            335   _C0RIF          BIT 0xe9
0000            336   _C1FIF          BIT 0xea
0000            337   _C1RIF          BIT 0xeb
0000            338   _C2FIF          BIT 0xec
0000            339   _C2RIF          BIT 0xed
0000            340   _C3FIF          BIT 0xee
0000            341   _C3RIF          BIT 0xef
0000            342   _D1SRC0         BIT 0x88
0000            343   _D1SRC1         BIT 0x89
0000            344   _D1AMEN         BIT 0x8a
0000            345   _D01REFSL       BIT 0x8b
0000            346   _D3SRC0         BIT 0x8c
0000            347   _D3SRC1         BIT 0x8d
0000            348   _D3AMEN         BIT 0x8e
0000            349   _D23REFSL       BIT 0x8f
0000            350   _D0UDIS         BIT 0x98
0000            351   _D1UDIS         BIT 0x99
0000            352   _D2UDIS         BIT 0x9a
0000            353   _D3UDIS         BIT 0x9b
0000            354   _EX0            BIT 0xa8
0000            355   _ET0            BIT 0xa9
0000            356   _EX1            BIT 0xaa
0000            357   _ET1            BIT 0xab
0000            358   _ES0            BIT 0xac
0000            359   _ET2            BIT 0xad
0000            360   _ESPI0          BIT 0xae
0000            361   _EA             BIT 0xaf
0000            362   _PX0            BIT 0xb8
0000            363   _PT0            BIT 0xb9
0000            364   _PX1            BIT 0xba
0000            365   _PT1            BIT 0xbb
0000            366   _PS0            BIT 0xbc
0000            367   _PT2            BIT 0xbd
0000            368   _PSPI0          BIT 0xbe
0000            369   _P0_0           BIT 0x80
0000            370   _P0_1           BIT 0x81
0000            371   _P0_2           BIT 0x82
0000            372   _P0_3           BIT 0x83
0000            373   _P0_4           BIT 0x84
0000            374   _P0_5           BIT 0x85
0000            375   _P0_6           BIT 0x86
0000            376   _P0_7           BIT 0x87
0000            377   _P1_0           BIT 0x90
0000            378   _P1_1           BIT 0x91
0000            379   _P1_2           BIT 0x92
0000            380   _P1_3           BIT 0x93
0000            381   _P1_4           BIT 0x94
0000            382   _P1_5           BIT 0x95
0000            383   _P1_6           BIT 0x96
0000            384   _P1_7           BIT 0x97
0000            385   _P2_0           BIT 0xa0
0000            386   _P2_1           BIT 0xa1
0000            387   _P2_2           BIT 0xa2
0000            388   _P2_3           BIT 0xa3
0000            389   _P2_4           BIT 0xa4
0000            390   _P2_5           BIT 0xa5
0000            391   _P2_6           BIT 0xa6
0000            392   _P3_0           BIT 0xb0
0000            393   _P3_1           BIT 0xb1
0000            394   _P3_2           BIT 0xb2
0000            395   _P3_3           BIT 0xb3
0000            396   _P3_4           BIT 0xb4
0000            397   _P3_7           BIT 0xb7
0000            398   _CCF0           BIT 0xd8
0000            399   _CCF1           BIT 0xd9
0000            400   _CCF2           BIT 0xda
0000            401   _CCF3           BIT 0xdb
0000            402   _CCF4           BIT 0xdc
0000            403   _CCF5           BIT 0xdd
0000            404   _CR             BIT 0xde
0000            405   _CF             BIT 0xdf
0000            406   _PARITY         BIT 0xd0
0000            407   _F1             BIT 0xd1
0000            408   _OV             BIT 0xd2
0000            409   _RS0            BIT 0xd3
0000            410   _RS1            BIT 0xd4
0000            411   _F0             BIT 0xd5
0000            412   _AC             BIT 0xd6
0000            413   _CY             BIT 0xd7
0000            414   _RI             BIT 0x98
0000            415   _TI             BIT 0x99
0000            416   _RB8            BIT 0x9a
0000            417   _TB8            BIT 0x9b
0000            418   _REN            BIT 0x9c
0000            419   _CE             BIT 0x9d
0000            420   _SMODE          BIT 0x9e
0000            421   _RI1            BIT 0xc8
0000            422   _TI1            BIT 0xc9
0000            423   _RBX1           BIT 0xca
0000            424   _TBX1           BIT 0xcb
0000            425   _REN1           BIT 0xcc
0000            426   _PERR1          BIT 0xcd
0000            427   _OVR1           BIT 0xce
0000            428   _SI             BIT 0xc0
0000            429   _ACK            BIT 0xc1
0000            430   _ARBLOST        BIT 0xc2
0000            431   _ACKRQ          BIT 0xc3
0000            432   _STO            BIT 0xc4
0000            433   _STA            BIT 0xc5
0000            434   _TXMODE         BIT 0xc6
0000            435   _MASTER         BIT 0xc7
0000            436   _SPIEN          BIT 0xf8
0000            437   _TXNF           BIT 0xf9
0000            438   _NSSMD0         BIT 0xfa
0000            439   _NSSMD1         BIT 0xfb
0000            440   _RXOVRN         BIT 0xfc
0000            441   _MODF           BIT 0xfd
0000            442   _WCOL           BIT 0xfe
0000            443   _SPIF           BIT 0xff
0000            444   _IT0            BIT 0x88
0000            445   _IE0            BIT 0x89
0000            446   _IT1            BIT 0x8a
0000            447   _IE1            BIT 0x8b
0000            448   _TR0            BIT 0x8c
0000            449   _TF0            BIT 0x8d
0000            450   _TR1            BIT 0x8e
0000            451   _TF1            BIT 0x8f
0000            452   _T2XCLK0        BIT 0xc8
0000            453   _T2XCLK1        BIT 0xc9
0000            454   _TR2            BIT 0xca
0000            455   _T2SPLIT        BIT 0xcb
0000            456   _TF2CEN         BIT 0xcc
0000            457   _TF2LEN         BIT 0xcd
0000            458   _TF2L           BIT 0xce
0000            459   _TF2H           BIT 0xcf
0000            460   _T4XCLK0        BIT 0x98
0000            461   _T4XCLK1        BIT 0x99
0000            462   _TR4            BIT 0x9a
0000            463   _T4SPLIT        BIT 0x9b
0000            464   _TF4CEN         BIT 0x9c
0000            465   _TF4LEN         BIT 0x9d
0000            466   _TF4L           BIT 0x9e
0000            467   _TF4H           BIT 0x9f
0000            468   _T5XCLK0        BIT 0xc0
0000            469   _T5XCLK1        BIT 0xc1
0000            470   _TR5            BIT 0xc2
0000            471   _T5SPLIT        BIT 0xc3
0000            472   _TF5CEN         BIT 0xc4
0000            473   _TF5LEN         BIT 0xc5
0000            474   _TF5L           BIT 0xc6
0000            475   _TF5H           BIT 0xc7
0000            476   _RIE            BIT 0xd8
0000            477   _RXTO0          BIT 0xd9
0000            478   _RXTO1          BIT 0xda
0000            479   _RFRQ           BIT 0xdb
0000            480   _TIE            BIT 0xdc
0000            481   _TXHOLD         BIT 0xdd
0000            482   _TXNF1          BIT 0xde
0000            483   _TFRQ           BIT 0xdf
0000            484   ;--------------------------------------------------------
0000            485   ; overlayable register banks
0000            486   ;--------------------------------------------------------
0000            487            rbank0 segment data overlay
0000            488   ;--------------------------------------------------------
0000            489   ; internal ram data
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DSEG
0000            492   _overflow_count:
0000            493            ds 1
0001            494   _F:
0001            495            ds 4
0005            496   _Period:
0005            497            ds 4
0009            498   _v1_max:
0009            499            ds 4
000D            500   _v2_max:
000D            501            ds 4
0011            502   _v1:
0011            503            ds 4
0015            504   _v2:
0015            505            ds 4
0019            506   _main_period_1_61:
0019            507            ds 4
001D            508   ;--------------------------------------------------------
001D            509   ; overlayable items in internal ram 
001D            510   ;--------------------------------------------------------
0000            511            rseg    R_OSEG
0000            512            rseg    R_OSEG
0000            513   _InitPinADC_PARM_2:
0000            514            ds 1
0001            515            rseg    R_OSEG
0001            516   ;--------------------------------------------------------
0001            517   ; indirectly addressable internal ram data
0001            518   ;--------------------------------------------------------
0000            519            rseg R_ISEG
0000            520   ;--------------------------------------------------------
0000            521   ; absolute internal ram data
0000            522   ;--------------------------------------------------------
0000            523            DSEG
0000            524   ;--------------------------------------------------------
0000            525   ; bit data
0000            526   ;--------------------------------------------------------
0000            527            rseg R_BSEG
0000            528   ;--------------------------------------------------------
0000            529   ; paged external ram data
0000            530   ;--------------------------------------------------------
0000            531            rseg R_PSEG
0000            532   ;--------------------------------------------------------
0000            533   ; external ram data
0000            534   ;--------------------------------------------------------
0000            535            rseg R_XSEG
0000            536   ;--------------------------------------------------------
0000            537   ; absolute external ram data
0000            538   ;--------------------------------------------------------
0000            539            XSEG
0000            540   ;--------------------------------------------------------
0000            541   ; external initialized ram data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_IXSEG
0000            544            rseg R_HOME
0000            545            rseg R_GSINIT
0000            546            rseg R_CSEG
0000            547   ;--------------------------------------------------------
0000            548   ; Reset entry point and interrupt vectors
0000            549   ;--------------------------------------------------------
0000            550            CSEG at 0x0000
0000 020000     551            ljmp    _crt0
0003            552   ;--------------------------------------------------------
0003            553   ; global & static initialisations
0003            554   ;--------------------------------------------------------
0000            555            rseg R_HOME
0000            556            rseg R_GSINIT
0000            557            rseg R_GSINIT
0000            558   ;--------------------------------------------------------
0000            559   ; data variables initialization
0000            560   ;--------------------------------------------------------
0000            561            rseg R_DINIT
0000            562   ;        sourcecode.c:17: float v1_max = 0; float v2_max = 0;
0000 751800     563            mov     _v1_max,#0x00
0003 751900     564            mov     (_v1_max + 1),#0x00
0006 751A00     565            mov     (_v1_max + 2),#0x00
0009 751B00     566            mov     (_v1_max + 3),#0x00
000C            567   ;        sourcecode.c:17: float v1 = 0; float v2 = 0;
000C 75D800     568            mov     _v2_max,#0x00
000F 75D900     569            mov     (_v2_max + 1),#0x00
0012 75DA00     570            mov     (_v2_max + 2),#0x00
0015 75DB00     571            mov     (_v2_max + 3),#0x00
0018            572   ;        sourcecode.c:18: 
0018 759800     573            mov     _v1,#0x00
001B 759900     574            mov     (_v1 + 1),#0x00
001E 759A00     575            mov     (_v1 + 2),#0x00
0021 759B00     576            mov     (_v1 + 3),#0x00
0024            577   ;        sourcecode.c:18: float v1 = 0; float v2 = 0;
0024 755800     578            mov     _v2,#0x00
0027 755900     579            mov     (_v2 + 1),#0x00
002A 755A00     580            mov     (_v2 + 2),#0x00
002D 755B00     581            mov     (_v2 + 3),#0x00
0030            582            ; The linker places a 'ret' at the end of segment R_DINIT.
0030            583   ;--------------------------------------------------------
0030            584   ; code
0030            585   ;--------------------------------------------------------
0000            586            rseg R_CSEG
0000            587   ;------------------------------------------------------------
0000            588   ;Allocation info for local variables in function '_c51_external_startup'
0000            589   ;------------------------------------------------------------
0000            590   ;------------------------------------------------------------
0000            591   ;        sourcecode.c:20: char _c51_external_startup (void)
0000            592   ;        -----------------------------------------
0000            593   ;         function _c51_external_startup
0000            594   ;        -----------------------------------------
0000            595   __c51_external_startup:
0000            596            using   0
0000            597   ;        sourcecode.c:23: SFRPAGE = 0x00;
0000 75A700     598            mov     _SFRPAGE,#0x00
0003            599   ;        sourcecode.c:24: WDTCN = 0xDE; //First key
0003 7597DE     600            mov     _WDTCN,#0xDE
0006            601   ;        sourcecode.c:25: WDTCN = 0xAD; //Second key
0006 7597AD     602            mov     _WDTCN,#0xAD
0009            603   ;        sourcecode.c:27: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     604            mov     _VDM0CN,#0x80
000C            605   ;        sourcecode.c:28: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     606            mov     _RSTSRC,#0x06
000F            607   ;        sourcecode.c:35: SFRPAGE = 0x10;
000F 75A710     608            mov     _SFRPAGE,#0x10
0012            609   ;        sourcecode.c:36: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     610            mov     _PFE0CN,#0x20
0015            611   ;        sourcecode.c:37: SFRPAGE = 0x00;
0015 75A700     612            mov     _SFRPAGE,#0x00
0018            613   ;        sourcecode.c:58: CLKSEL = 0x00;
0018 75A900     614            mov     _CLKSEL,#0x00
001B            615   ;        sourcecode.c:59: CLKSEL = 0x00;
001B 75A900     616            mov     _CLKSEL,#0x00
001E            617   ;        sourcecode.c:60: while ((CLKSEL & 0x80) == 0);
001E            618   L002001?:
001E E5A9       619            mov     a,_CLKSEL
0020 30E7E0     620            jnb     acc.7,L002001?
0023            621   ;        sourcecode.c:61: CLKSEL = 0x03;
0023 75A903     622            mov     _CLKSEL,#0x03
0026            623   ;        sourcecode.c:62: CLKSEL = 0x03;
0026 75A903     624            mov     _CLKSEL,#0x03
0029            625   ;        sourcecode.c:63: while ((CLKSEL & 0x80) == 0);
0029            626   L002004?:
0029 E5A9       627            mov     a,_CLKSEL
002B 30E760     628            jnb     acc.7,L002004?
002E            629   ;        sourcecode.c:68: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     630            orl     _P0MDOUT,#0x10
0031            631   ;        sourcecode.c:69: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     632            mov     _XBR0,#0x01
0034            633   ;        sourcecode.c:70: XBR1     = 0X00;
0034 75E200     634            mov     _XBR1,#0x00
0037            635   ;        sourcecode.c:71: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     636            mov     _XBR2,#0x40
003A            637   ;        sourcecode.c:77: SCON0 = 0x10;
003A 759810     638            mov     _SCON0,#0x10
003D            639   ;        sourcecode.c:78: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     640            mov     _TH1,#0xE6
0040            641   ;        sourcecode.c:79: TL1 = TH1;      // Init Timer1
0040 858D8B     642            mov     _TL1,_TH1
0043            643   ;        sourcecode.c:80: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     644            anl     _TMOD,#0x0F
0046            645   ;        sourcecode.c:81: TMOD |=  0x20;                       
0046 438920     646            orl     _TMOD,#0x20
0049            647   ;        sourcecode.c:82: TR1 = 1; // START Timer1
0049 D28E       648            setb    _TR1
004B            649   ;        sourcecode.c:83: TI = 1;  // Indicate TX0 ready
004B D299       650            setb    _TI
004D            651   ;        sourcecode.c:85: return 0;
004D 758200     652            mov     dpl,#0x00
0050 22         653            ret
0051            654   ;------------------------------------------------------------
0051            655   ;Allocation info for local variables in function 'InitADC'
0051            656   ;------------------------------------------------------------
0051            657   ;------------------------------------------------------------
0051            658   ;        sourcecode.c:88: void InitADC (void)
0051            659   ;        -----------------------------------------
0051            660   ;         function InitADC
0051            661   ;        -----------------------------------------
0051            662   _InitADC:
0051            663   ;        sourcecode.c:90: SFRPAGE = 0x00;
0051 75A700     664            mov     _SFRPAGE,#0x00
0054            665   ;        sourcecode.c:91: ADEN=0; // Disable ADC
0054 C2EF       666            clr     _ADEN
0056            667   ;        sourcecode.c:96: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     668            mov     _ADC0CN1,#0x80
0059            669   ;        sourcecode.c:100: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     670            mov     _ADC0CF0,#0x20
005C            671   ;        sourcecode.c:104: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     672            mov     _ADC0CF1,#0x1E
005F            673   ;        sourcecode.c:113: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     674            mov     _ADC0CN0,#0x00
0062            675   ;        sourcecode.c:118: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     676            mov     _ADC0CF2,#0x3F
0065            677   ;        sourcecode.c:122: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     678            mov     _ADC0CN2,#0x00
0068            679   ;        sourcecode.c:124: ADEN=1; // Enable ADC
0068 D2EF       680            setb    _ADEN
006A 22         681            ret
006B            682   ;------------------------------------------------------------
006B            683   ;Allocation info for local variables in function 'Timer3us'
006B            684   ;------------------------------------------------------------
006B            685   ;us                        Allocated to registers r2 
006B            686   ;i                         Allocated to registers r3 
006B            687   ;------------------------------------------------------------
006B            688   ;        sourcecode.c:128: void Timer3us(unsigned char us)
006B            689   ;        -----------------------------------------
006B            690   ;         function Timer3us
006B            691   ;        -----------------------------------------
006B            692   _Timer3us:
006B AA82       693            mov     r2,dpl
006D            694   ;        sourcecode.c:133: CKCON0|=0b_0100_0000;
006D 438E40     695            orl     _CKCON0,#0x40
0070            696   ;        sourcecode.c:135: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     697            mov     _TMR3RL,#0xB8
0073 7593FF     698            mov     (_TMR3RL >> 8),#0xFF
0076            699   ;        sourcecode.c:136: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     700            mov     _TMR3,_TMR3RL
0079 859395     701            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            702   ;        sourcecode.c:138: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     703            mov     _TMR3CN0,#0x04
007F            704   ;        sourcecode.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       705            mov     r3,#0x00
0081            706   L004004?:
0081 C3         707            clr     c
0082 EB         708            mov     a,r3
0083 9A         709            subb    a,r2
0084 5000       710            jnc     L004007?
0086            711   ;        sourcecode.c:141: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            712   L004001?:
0086 E591       713            mov     a,_TMR3CN0
0088 30E760     714            jnb     acc.7,L004001?
008B            715   ;        sourcecode.c:142: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     716            anl     _TMR3CN0,#0x7F
008E            717   ;        sourcecode.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         718            inc     r3
008F 8000       719            sjmp    L004004?
0091            720   L004007?:
0091            721   ;        sourcecode.c:144: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     722            mov     _TMR3CN0,#0x00
0094 22         723            ret
0095            724   ;------------------------------------------------------------
0095            725   ;Allocation info for local variables in function 'waitms'
0095            726   ;------------------------------------------------------------
0095            727   ;ms                        Allocated to registers r2 r3 
0095            728   ;j                         Allocated to registers r4 r5 
0095            729   ;k                         Allocated to registers r6 
0095            730   ;------------------------------------------------------------
0095            731   ;        sourcecode.c:147: void waitms (unsigned int ms)
0095            732   ;        -----------------------------------------
0095            733   ;         function waitms
0095            734   ;        -----------------------------------------
0095            735   _waitms:
0095 AA82       736            mov     r2,dpl
0097 AB83       737            mov     r3,dph
0099            738   ;        sourcecode.c:151: for(j=0; j<ms; j++)
0099 7C00       739            mov     r4,#0x00
009B 7D00       740            mov     r5,#0x00
009D            741   L005005?:
009D C3         742            clr     c
009E EC         743            mov     a,r4
009F 9A         744            subb    a,r2
00A0 ED         745            mov     a,r5
00A1 9B         746            subb    a,r3
00A2 5000       747            jnc     L005009?
00A4            748   ;        sourcecode.c:152: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       749            mov     r6,#0x00
00A6            750   L005001?:
00A6 BE04A0     751            cjne    r6,#0x04,L005018?
00A9            752   L005018?:
00A9 5000       753            jnc     L005007?
00AB 7582FA     754            mov     dpl,#0xFA
00AE C002       755            push    ar2
00B0 C003       756            push    ar3
00B2 C004       757            push    ar4
00B4 C005       758            push    ar5
00B6 C006       759            push    ar6
00B8 120000     760            lcall   _Timer3us
00BB D006       761            pop     ar6
00BD D005       762            pop     ar5
00BF D004       763            pop     ar4
00C1 D003       764            pop     ar3
00C3 D002       765            pop     ar2
00C5 0E         766            inc     r6
00C6 8000       767            sjmp    L005001?
00C8            768   L005007?:
00C8            769   ;        sourcecode.c:151: for(j=0; j<ms; j++)
00C8 0C         770            inc     r4
00C9 BC00E0     771            cjne    r4,#0x00,L005005?
00CC 0D         772            inc     r5
00CD 8000       773            sjmp    L005005?
00CF            774   L005009?:
00CF 22         775            ret
00D0            776   ;------------------------------------------------------------
00D0            777   ;Allocation info for local variables in function 'InitPinADC'
00D0            778   ;------------------------------------------------------------
00D0            779   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D0            780   ;portno                    Allocated to registers r2 
00D0            781   ;mask                      Allocated to registers r3 
00D0            782   ;------------------------------------------------------------
00D0            783   ;        sourcecode.c:157: void InitPinADC (unsigned char portno, unsigned char pinno)
00D0            784   ;        -----------------------------------------
00D0            785   ;         function InitPinADC
00D0            786   ;        -----------------------------------------
00D0            787   _InitPinADC:
00D0 AA82       788            mov     r2,dpl
00D2            789   ;        sourcecode.c:161: mask=1<<pinno;
00D2 85C8F0     790            mov     b,_InitPinADC_PARM_2
00D5 05F0       791            inc     b
00D7 7401       792            mov     a,#0x01
00D9 8000       793            sjmp    L006013?
00DB            794   L006011?:
00DB 25E0       795            add     a,acc
00DD            796   L006013?:
00DD D5F0A0     797            djnz    b,L006011?
00E0 FB         798            mov     r3,a
00E1            799   ;        sourcecode.c:163: SFRPAGE = 0x20;
00E1 75A720     800            mov     _SFRPAGE,#0x20
00E4            801   ;        sourcecode.c:164: switch (portno)
00E4 BA00E0     802            cjne    r2,#0x00,L006014?
00E7 8000       803            sjmp    L006001?
00E9            804   L006014?:
00E9 BA0160     805            cjne    r2,#0x01,L006015?
00EC 8000       806            sjmp    L006002?
00EE            807   L006015?:
00EE            808   ;        sourcecode.c:166: case 0:
00EE BA02E8     809            cjne    r2,#0x02,L006005?
00F1 8000       810            sjmp    L006003?
00F3            811   L006001?:
00F3            812   ;        sourcecode.c:167: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         813            mov     a,r3
00F4 F4         814            cpl     a
00F5 FA         815            mov     r2,a
00F6 52F1       816            anl     _P0MDIN,a
00F8            817   ;        sourcecode.c:168: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         818            mov     a,r3
00F9 42D4       819            orl     _P0SKIP,a
00FB            820   ;        sourcecode.c:169: break;
00FB            821   ;        sourcecode.c:170: case 1:
00FB 8000       822            sjmp    L006005?
00FD            823   L006002?:
00FD            824   ;        sourcecode.c:171: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         825            mov     a,r3
00FE F4         826            cpl     a
00FF FA         827            mov     r2,a
0100 52F2       828            anl     _P1MDIN,a
0102            829   ;        sourcecode.c:172: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         830            mov     a,r3
0103 42D5       831            orl     _P1SKIP,a
0105            832   ;        sourcecode.c:173: break;
0105            833   ;        sourcecode.c:174: case 2:
0105 8000       834            sjmp    L006005?
0107            835   L006003?:
0107            836   ;        sourcecode.c:175: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         837            mov     a,r3
0108 F4         838            cpl     a
0109 FA         839            mov     r2,a
010A 52F3       840            anl     _P2MDIN,a
010C            841   ;        sourcecode.c:176: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         842            mov     a,r3
010D 42CC       843            orl     _P2SKIP,a
010F            844   ;        sourcecode.c:180: }
010F            845   L006005?:
010F            846   ;        sourcecode.c:181: SFRPAGE = 0x00;
010F 75A700     847            mov     _SFRPAGE,#0x00
0112 22         848            ret
0113            849   ;------------------------------------------------------------
0113            850   ;Allocation info for local variables in function 'ADC_at_Pin'
0113            851   ;------------------------------------------------------------
0113            852   ;pin                       Allocated to registers 
0113            853   ;------------------------------------------------------------
0113            854   ;        sourcecode.c:184: unsigned int ADC_at_Pin(unsigned char pin)
0113            855   ;        -----------------------------------------
0113            856   ;         function ADC_at_Pin
0113            857   ;        -----------------------------------------
0113            858   _ADC_at_Pin:
0113 8582BB     859            mov     _ADC0MX,dpl
0116            860   ;        sourcecode.c:187: ADINT = 0;
0116 C2ED       861            clr     _ADINT
0118            862   ;        sourcecode.c:188: ADBUSY = 1;     // Convert voltage at the pin
0118 D2EC       863            setb    _ADBUSY
011A            864   ;        sourcecode.c:189: while (!ADINT); // Wait for conversion to complete
011A            865   L007001?:
011A 30ED68     866            jnb     _ADINT,L007001?
011D            867   ;        sourcecode.c:190: return (ADC0);
011D 85BD82     868            mov     dpl,_ADC0
0120 85BE83     869            mov     dph,(_ADC0 >> 8)
0123 22         870            ret
0124            871   ;------------------------------------------------------------
0124            872   ;Allocation info for local variables in function 'Volts_at_Pin'
0124            873   ;------------------------------------------------------------
0124            874   ;pin                       Allocated to registers r2 
0124            875   ;------------------------------------------------------------
0124            876   ;        sourcecode.c:201: float Volts_at_Pin(unsigned char pin)
0124            877   ;        -----------------------------------------
0124            878   ;         function Volts_at_Pin
0124            879   ;        -----------------------------------------
0124            880   _Volts_at_Pin:
0124            881   ;        sourcecode.c:203: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0124 120000     882            lcall   _ADC_at_Pin
0127 120000     883            lcall   ___uint2fs
012A AA82       884            mov     r2,dpl
012C AB83       885            mov     r3,dph
012E ACF0       886            mov     r4,b
0130 FD         887            mov     r5,a
0131 C002       888            push    ar2
0133 C003       889            push    ar3
0135 C004       890            push    ar4
0137 C005       891            push    ar5
0139 90923A     892            mov     dptr,#0x923A
013C 75F053     893            mov     b,#0x53
013F 7440       894            mov     a,#0x40
0141 120000     895            lcall   ___fsmul
0144 AA82       896            mov     r2,dpl
0146 AB83       897            mov     r3,dph
0148 ACF0       898            mov     r4,b
014A FD         899            mov     r5,a
014B E581       900            mov     a,sp
014D 24FC       901            add     a,#0xfc
014F F581       902            mov     sp,a
0151 E4         903            clr     a
0152 C0E0       904            push    acc
0154 74FC       905            mov     a,#0xFC
0156 C0E0       906            push    acc
0158 747F       907            mov     a,#0x7F
015A C0E0       908            push    acc
015C 7446       909            mov     a,#0x46
015E C0E0       910            push    acc
0160 8A82       911            mov     dpl,r2
0162 8B83       912            mov     dph,r3
0164 8CF0       913            mov     b,r4
0166 ED         914            mov     a,r5
0167 120000     915            lcall   ___fsdiv
016A AA82       916            mov     r2,dpl
016C AB83       917            mov     r3,dph
016E ACF0       918            mov     r4,b
0170 FD         919            mov     r5,a
0171 E581       920            mov     a,sp
0173 24FC       921            add     a,#0xfc
0175 F581       922            mov     sp,a
0177 8A82       923            mov     dpl,r2
0179 8B83       924            mov     dph,r3
017B 8CF0       925            mov     b,r4
017D ED         926            mov     a,r5
017E 22         927            ret
017F            928   ;------------------------------------------------------------
017F            929   ;Allocation info for local variables in function 'TIMER0_Init'
017F            930   ;------------------------------------------------------------
017F            931   ;------------------------------------------------------------
017F            932   ;        sourcecode.c:206: void TIMER0_Init(void)
017F            933   ;        -----------------------------------------
017F            934   ;         function TIMER0_Init
017F            935   ;        -----------------------------------------
017F            936   _TIMER0_Init:
017F            937   ;        sourcecode.c:208: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
017F 5389F0     938            anl     _TMOD,#0xF0
0182            939   ;        sourcecode.c:209: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit counter
0182 438901     940            orl     _TMOD,#0x01
0185            941   ;        sourcecode.c:210: TR0=0; // Stop Timer/Counter 0
0185 C28C       942            clr     _TR0
0187 22         943            ret
0188            944   ;------------------------------------------------------------
0188            945   ;Allocation info for local variables in function 'main'
0188            946   ;------------------------------------------------------------
0188            947   ;period                    Allocated with name '_main_period_1_61'
0188            948   ;Phase_Shift               Allocated with name '_main_Phase_Shift_1_61'
0188            949   ;time_difference           Allocated with name '_main_time_difference_1_61'
0188            950   ;------------------------------------------------------------
0188            951   ;        sourcecode.c:219: void main (void)
0188            952   ;        -----------------------------------------
0188            953   ;         function main
0188            954   ;        -----------------------------------------
0188            955   _main:
0188            956   ;        sourcecode.c:225: TIMER0_Init();
0188 120000     957            lcall   _TIMER0_Init
018B            958   ;        sourcecode.c:227: waitms(500); // Give PuTTy a chance to start before sending
018B 9001F4     959            mov     dptr,#0x01F4
018E 120000     960            lcall   _waitms
0191            961   ;        sourcecode.c:228: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0191 74A8       962            mov     a,#__str_0
0193 C0E0       963            push    acc
0195 74D1       964            mov     a,#(__str_0 >> 8)
0197 C0E0       965            push    acc
0199 7480       966            mov     a,#0x80
019B C0E0       967            push    acc
019D 120000     968            lcall   _printf
01A0 1581       969            dec     sp
01A2 1581       970            dec     sp
01A4 1581       971            dec     sp
01A6            972   ;        sourcecode.c:233: __FILE__, __DATE__, __TIME__);
01A6            973   ;        sourcecode.c:232: "Compiled: %s, %s\n\n",
01A6 7428       974            mov     a,#__str_4
01A8 C0E0       975            push    acc
01AA 74D2       976            mov     a,#(__str_4 >> 8)
01AC C0E0       977            push    acc
01AE 7480       978            mov     a,#0x80
01B0 C0E0       979            push    acc
01B2 7468       980            mov     a,#__str_3
01B4 C0E0       981            push    acc
01B6 74D2       982            mov     a,#(__str_3 >> 8)
01B8 C0E0       983            push    acc
01BA 7480       984            mov     a,#0x80
01BC C0E0       985            push    acc
01BE 74A8       986            mov     a,#__str_2
01C0 C0E0       987            push    acc
01C2 74D2       988            mov     a,#(__str_2 >> 8)
01C4 C0E0       989            push    acc
01C6 7480       990            mov     a,#0x80
01C8 C0E0       991            push    acc
01CA 74E8       992            mov     a,#__str_1
01CC C0E0       993            push    acc
01CE 74D2       994            mov     a,#(__str_1 >> 8)
01D0 C0E0       995            push    acc
01D2 7480       996            mov     a,#0x80
01D4 C0E0       997            push    acc
01D6 120000     998            lcall   _printf
01D9 E581       999            mov     a,sp
01DB 24F4      1000            add     a,#0xf4
01DD F581      1001            mov     sp,a
01DF           1002   ;        sourcecode.c:235: InitPinADC(2, 1); // Configure P2.1 as analog input
01DF 75C801    1003            mov     _InitPinADC_PARM_2,#0x01
01E2 758202    1004            mov     dpl,#0x02
01E5 120000    1005            lcall   _InitPinADC
01E8           1006   ;        sourcecode.c:236: InitPinADC(2, 2); // Configure P2.2 as analog input
01E8 75C802    1007            mov     _InitPinADC_PARM_2,#0x02
01EB 758202    1008            mov     dpl,#0x02
01EE 120000    1009            lcall   _InitPinADC
01F1           1010   ;        sourcecode.c:238: InitADC();
01F1 120000    1011            lcall   _InitADC
01F4           1012   ;        sourcecode.c:243: while(1)
01F4           1013   L010002?:
01F4           1014   ;        sourcecode.c:244: printf("%f\n",Volts_at_Pin(QFP32_MUX_P2_2));
01F4 75820F    1015            mov     dpl,#0x0F
01F7 120000    1016            lcall   _Volts_at_Pin
01FA AA82      1017            mov     r2,dpl
01FC AB83      1018            mov     r3,dph
01FE ACF0      1019            mov     r4,b
0200 FD        1020            mov     r5,a
0201 C002      1021            push    ar2
0203 C003      1022            push    ar3
0205 C004      1023            push    ar4
0207 C005      1024            push    ar5
0209 7468      1025            mov     a,#__str_5
020B C0E0      1026            push    acc
020D 74D3      1027            mov     a,#(__str_5 >> 8)
020F C0E0      1028            push    acc
0211 7480      1029            mov     a,#0x80
0213 C0E0      1030            push    acc
0215 120000    1031            lcall   _printf
0218 E581      1032            mov     a,sp
021A 24F9      1033            add     a,#0xf9
021C F581      1034            mov     sp,a
021E           1035   ;        sourcecode.c:302: printf ("Max Amp @p2.1=%7.5fV, Max Amp @p2.2=%7.5fV,\r", v1_max, v2_max); //print the two values for max amplitude
021E 8000      1036            sjmp    L010002?
0220           1037            rseg R_CSEG
0220           1038   
0000           1039            rseg R_XINIT
0000           1040   
0000           1041            rseg R_CONST
0000           1042   __str_0:
0000 1B        1043            db 0x1B
0001 5B324A    1044            db '[2J'
0004 00        1045            db 0x00
0005           1046   __str_1:
0005 41444320  1047            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1048            db 0x0A
0016 46696C65  1049            db 'File: %s'
     3A202573
001E 0A        1050            db 0x0A
001F 436F6D70  1051            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1052            db 0x0A
0030 0A        1053            db 0x0A
0031 00        1054            db 0x00
0032           1055   __str_2:
0032 736F7572  1056            db 'sourcecode.c'
     6365636F
     64652E63
003E 00        1057            db 0x00
003F           1058   __str_3:
003F 4D617220  1059            db 'Mar  6 2024'
     20362032
     303234
004A 00        1060            db 0x00
004B           1061   __str_4:
004B 31323A32  1062            db '12:27:35'
     373A3335
0053 00        1063            db 0x00
0054           1064   __str_5:
0054 2566      1065            db '%f'
0056 0A        1066            db 0x0A
0057 00        1067            db 0x00
0058           1068   __str_6:
0058 4D617820  1069            db 'Max Amp @p2.1=%7.5fV, Max Amp @p2.2=%7.5fV,'
     416D7020
     4070322E
     313D2537
     2E356656
     2C204D61
     7820416D
     70204070
     322E323D
     25372E35
     66562C
0083 0D        1070            db 0x0D
0084 00        1071            db 0x00
0085           1072   
0003           1073            CSEG
0003           1074   
0003           1075   end
